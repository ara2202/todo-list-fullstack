{"version":3,"sources":["actions/todos.js","Todos.js","App.js","serviceWorker.js","reducers/todos.js","reducers/index.js","sagas/index.js","index.js"],"names":["ADD_TODO","ADD_TODO_SUCCESS","TODOS_FAILURE","TOGGLE_TODO","DELETE_TODO","LOADED_TODOS","FETCH_TODOS","addTodoSuccess","todo","type","todosFailure","error","loadedTodos","todos","Todo","onDelete","id","onToggle","className","done","checked","onChange","description","onClick","Todos","state","newTodo","this","props","fetchTodos","event","preventDefault","addTodo","setState","isLoading","isSaving","deleteTodo","toggleTodo","total","length","complete","filter","incomplete","onSubmit","bind","style","justifyContent","value","placeholder","e","target","disabled","map","key","_id","Component","mapDispatchToProps","connect","items","loading","saving","App","Boolean","window","location","hostname","match","TODOS_DEFAULT_STATE","todoApp","combineReducers","action","concat","reduce","DEFAULT_STATE","getAllTodos","saveTodo","updateTodo","rootSaga","call","fetch","res","json","put","message","options","method","body","JSON","stringify","headers","Headers","takeLatest","takeEvery","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"ySAAaA,EAAW,WACVC,EAAmB,mBACnBC,EAAgB,gBAChBC,EAAc,cACdC,EAAc,cACdC,EAAe,eACfC,EAAc,cAOpB,SAASC,EAAeC,GAC/B,MAAO,CAAEC,KAAMR,EAAkBO,QAG1B,SAASE,EAAaC,GAC7B,MAAO,CAAEF,KAAMP,EAAeS,SAWvB,SAASC,EAAYC,GAC5B,MAAO,CAAEJ,KAAMJ,EAAcQ,SCzB9B,IAAMC,EAAO,SAAC,GAAD,IAAGN,EAAH,EAAGA,KAAUO,GAAb,EAASC,GAAT,EAAaD,UAAUE,EAAvB,EAAuBA,SAAvB,OACb,yBAAKC,UAAU,iCACf,yBAAKA,UAAU,cACf,2BAAOA,UAAS,sCAAiCV,EAAKW,MAAQ,cAC9D,2BAAOD,UAAU,WACjBT,KAAK,WACLW,QAASZ,EAAKW,KACdE,SAAUJ,IACV,8BAAOT,EAAKc,eAGZ,yBAAKJ,UAAU,eACf,uBAAGA,UAAU,oBAAoBK,QAASR,GAA1C,aAKMS,E,2MACNC,MAAQ,CAAEC,QAAS,I,mFAGnBC,KAAKC,MAAMC,e,8BAGFC,GACTA,EAAMC,iBADU,IAERL,EAAYC,KAAKF,MAAjBC,QAER,GAAGA,EAAS,CACZ,IAAMlB,EAAO,CAAEc,YAAaI,EAASP,MAAM,GAC3CQ,KAAKC,MAAMI,QAAQxB,GACnBmB,KAAKM,SAAS,CAAEP,QAAS,Q,+BAIf,IAAD,OACHA,EAAYC,KAAKF,MAAjBC,QADG,EAE6DC,KAAKC,MAAnEf,EAFC,EAEDA,MAAOqB,EAFN,EAEMA,UAAWC,EAFjB,EAEiBA,SAAUxB,EAF3B,EAE2BA,MAAOyB,EAFlC,EAEkCA,WAAYC,EAF9C,EAE8CA,WAEjDC,EAAQzB,EAAM0B,OACdC,EAAW3B,EAAM4B,QAAO,SAACjC,GAAD,OAAUA,EAAKW,QAAMoB,OAC7CG,EAAa7B,EAAM4B,QAAO,SAACjC,GAAD,OAAWA,EAAKW,QAAMoB,OAEtD,OACA,6BAASrB,UAAU,uBACnB,wBAAIA,UAAU,eAAd,SACA,yBAAKA,UAAU,SAASP,GAExB,0BAAMO,UAAU,OAAOyB,SAAUhB,KAAKK,QAAQY,KAAKjB,OACnD,yBAAKT,UAAU,mBAAmB2B,MAAO,CAAEC,eAAgB,WAC3D,yBAAK5B,UAAU,WACf,2BAAOA,UAAU,QACjB6B,MAAOrB,EACPsB,YAAY,WACZ3B,SAAU,SAAC4B,GAAD,OAAO,EAAKhB,SAAS,CAAEP,QAASuB,EAAEC,OAAOH,YAGnD,yBAAK7B,UAAU,WACf,4BAAQA,UAAS,6BAAwBgB,GAAaC,IAAa,cACnEgB,SAAUjB,GAAaC,GADvB,UAMA,yBAAKjB,UAAU,uBACdL,EAAMuC,KAAI,SAAC5C,GAAD,OAAU,kBAAC,EAAD,CAAM6C,IAAK7C,EAAK8C,IACrCtC,GAAIR,EAAK8C,IACT9C,KAAMA,EACNO,SAAU,kBAAMqB,EAAW5B,EAAK8C,MAChCrC,SAAU,kBAAMoB,EAAW7B,EAAK8C,WAChC,yBAAKpC,UAAU,SAAf,UACQoB,EADR,gBAC4BE,EAD5B,kBACqDE,S,GAtDjCa,aAuEdC,EAAqB,CAC3BxB,QDrFQ,SAAiBxB,GACxB,MAAO,CAAEC,KAAMT,EAAUQ,SCqF1B6B,WD1EQ,SAAoBrB,GAC3B,MAAO,CAAEP,KAAMN,EAAaa,OC0E7BoB,WDvEQ,SAAoBpB,GAC3B,MAAO,CAAEP,KAAML,EAAaY,OCuE7Ba,WDhEQ,WACP,MAAO,CAAEpB,KAAMH,KCkEDmD,eAhBS,SAAChC,GACzB,MAAO,CACPZ,MAAOY,EAAMZ,MAAM6C,MACnBxB,UAAWT,EAAMZ,MAAM8C,QACvBxB,SAAUV,EAAMZ,MAAM+C,OACtBjD,MAAOc,EAAMZ,MAAMF,SAWqB6C,EAAzBC,CAA6CjC,GCrF7CqC,E,iLARX,OACE,yBAAK3C,UAAU,OACb,kBAAC,EAAD,W,GAJUqC,aCOEO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,olBCRK,IAAMC,EAAsB,CACnCR,SAAS,EACTC,QAAQ,EACRjD,MAAO,GACP+C,MAAO,ICXV,IAAMU,EAAUC,YAAgB,CAChCxD,MDakB,WAAsD,IAAtCY,EAAqC,uDAA7B0C,EAAqBG,EAAQ,uCACpE,OAAQA,EAAO7D,MACf,KAAKJ,EACL,OAAO,EAAP,GAAWoB,EAAX,CAAkBiC,MAAOY,EAAOzD,MAAO8C,SAAS,IAEhD,KAAKrD,EACL,OAAO,EAAP,GAAWmB,EAAX,CAAkBkC,SAAS,IAG3B,KAAK3D,EACL,OAAO,EAAP,GAAWyB,EAAX,CAAkBmC,QAAQ,IAE1B,KAAK3D,EACL,OAAO,EAAP,GACGwB,EADH,CAEAiC,MAAOjC,EAAMiC,MAAMa,OAAOD,EAAO9D,MACjCoD,QAAQ,IAGR,KAAK1D,EACL,OAAO,EAAP,GAAWuB,EAAX,CAAkBkC,SAAS,EAAOC,QAAQ,EAAOjD,MAAO2D,EAAO3D,QAE/D,KAAKR,EACL,OAAO,EAAP,GACGsB,EADH,CAEAiC,MAAOjC,EAAMiC,MAAMN,KAAI,SAAC5C,GAAD,OACvBA,EAAK8C,MAAQgB,EAAOtD,GAApB,KAA6BR,EAA7B,CAAmCW,MAAOX,EAAKW,OAAQX,OAIvD,KAAKJ,EACL,OAAO,EAAP,GACGqB,EADH,CAEAiC,MAAOjC,EAAMiC,MAAMc,QAAO,SAACd,EAAOlD,GAAR,OAC1BA,EAAK8C,MAAQgB,EAAOtD,GAAK0C,EAAMa,OAAO/D,GAAQkD,IAAO,MAIrD,QACA,OAAOjC,MCjDGgD,EAAgB,CAC7B5D,MAAOsD,GAGQC,I,kCCRLM,G,WAUAC,G,WAkBAvC,G,WAQAwC,G,WAQAC,GA5CV,SAAUH,IAAV,yEAEY,OAFZ,kBAEkBI,YAAKC,MAAO,YAF9B,OAGc,OADRC,EAFN,gBAGoBA,EAAIC,OAHxB,OAIA,OADMpE,EAHN,gBAIMqE,YAAItE,EAAYC,IAJtB,+BAMA,OANA,oCAMMqE,YAAIxE,EAAa,KAAEyE,UANzB,sDAUA,SAAUR,EAAUL,GAApB,2EAUY,OAVZ,SAEMc,EAAU,CAChBC,OAAQ,OACRC,KAAMC,KAAKC,UAAUlB,EAAO9D,MAC5BiF,QAAS,IAAIC,QAAQ,CACrB,eAAgB,sBANhB,SAUkBZ,YAAKC,MAAO,WAAYK,GAV1C,OAWa,OADPJ,EAVN,gBAWmBA,EAAIC,OAXvB,OAYA,OADMzE,EAXN,iBAYM0E,YAAI3E,EAAeC,IAZzB,gCAcA,OAdA,oCAcM0E,YAAIxE,EAAa,KAAEyE,UAdzB,sDAkBA,SAAU/C,EAAYkC,GAAtB,iEAEA,OAFA,kBAEMQ,YAAKC,MAAD,mBAAoBT,EAAOtD,IAAM,CAAEqE,OAAQ,WAFrD,6BAIA,OAJA,kCAIMH,YAAIxE,EAAa,KAAEyE,UAJzB,oDAQA,SAAUP,EAAYN,GAAtB,iEAEA,OAFA,kBAEMQ,YAAKC,MAAD,mBAAoBT,EAAOtD,IAAM,CAAEqE,OAAQ,SAFrD,6BAIA,OAJA,kCAIMH,YAAIxE,EAAa,KAAEyE,UAJzB,oDAQA,SAAUN,IAAV,iEACA,OADA,SACMc,YAAWrF,EAAaoE,GAD9B,OAEA,OAFA,SAEMiB,YAAW3F,EAAU2E,GAF3B,OAGA,OAHA,SAGMgB,YAAWvF,EAAagC,GAH9B,OAIA,OAJA,SAIMwD,YAAUzF,EAAayE,GAJ7B,uCAOeC,QC3CVgB,EAAiBC,cACjBC,EAAmBhC,OAAOiC,sCAAwCC,IAElEC,EAAQC,YACTC,EACA3B,EACAsB,EAAiBM,YAAgBR,KAGtCA,EAAeS,IAAIzB,GAEnB0B,IAASC,OACL,kBAAC,IAAD,CAAUN,MAAOA,GACb,kBAAC,EAAD,OAEDO,SAASC,eAAe,SJuGzB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.6894464c.chunk.js","sourcesContent":["export const ADD_TODO = 'ADD_TODO'\n export const ADD_TODO_SUCCESS = 'ADD_TODO_SUCCESS'\n export const TODOS_FAILURE = 'TODOS_FAILURE'\n export const TOGGLE_TODO = 'TOGGLE_TODO'\n export const DELETE_TODO = 'DELETE_TODO'\n export const LOADED_TODOS = 'LOADED_TODOS'\n export const FETCH_TODOS = 'FETCH_TODOS'\n \n // action creators\n export function addTodo(todo) {\n return { type: ADD_TODO, todo }\n }\n \n export function addTodoSuccess(todo) {\n return { type: ADD_TODO_SUCCESS, todo }\n }\n \n export function todosFailure(error) {\n return { type: TODOS_FAILURE, error }\n }\n \n export function toggleTodo(id) {\n return { type: TOGGLE_TODO, id }\n }\n \n export function deleteTodo(id) {\n return { type: DELETE_TODO, id }\n }\n \n export function loadedTodos(todos) {\n return { type: LOADED_TODOS, todos }\n }\n \n export function fetchTodos() {\n return { type: FETCH_TODOS }\n }","import React, { Component } from 'react'\nimport 'bulma/css/bulma.css'\nimport { connect } from 'react-redux'\nimport { addTodo, toggleTodo, deleteTodo, fetchTodos } from './actions/todos';\n\nconst Todo = ({ todo, id, onDelete, onToggle }) => (\n<div className=\"box todo-item level is-mobile\">\n<div className=\"level-left\">\n<label className={`level-item todo-description ${todo.done && 'completed'}`}>\n<input className=\"checkbox\" \ntype=\"checkbox\" \nchecked={todo.done} \nonChange={onToggle}/>\n<span>{todo.description}</span>\n</label>\n</div>\n<div className=\"level-right\">\n<a className=\"delete level-item\" onClick={onDelete}>Delete</a>\n</div>\n</div>\n)\n\nclass Todos extends Component {\nstate = { newTodo: '' }\n\ncomponentDidMount() {\nthis.props.fetchTodos()\n}\n\naddTodo (event) {\nevent.preventDefault() // Prevent form from reloading page\nconst { newTodo } = this.state\n\nif(newTodo) {\nconst todo = { description: newTodo, done: false }\nthis.props.addTodo(todo)\nthis.setState({ newTodo: '' })\n}\n}\n\nrender() {\nlet { newTodo } = this.state\nconst { todos, isLoading, isSaving, error, deleteTodo, toggleTodo } = this.props\n\nconst total = todos.length\nconst complete = todos.filter((todo) => todo.done).length\nconst incomplete = todos.filter((todo) => !todo.done).length\n\nreturn (\n<section className=\"section full-column\">\n<h1 className=\"title white\">Todos</h1>\n<div className=\"error\">{error}</div>\n\n<form className=\"form\" onSubmit={this.addTodo.bind(this)}>\n<div className=\"field has-addons\" style={{ justifyContent: 'center' }}>\n<div className=\"control\">\n<input className=\"input\"\nvalue={newTodo}\nplaceholder=\"New todo\"\nonChange={(e) => this.setState({ newTodo: e.target.value })}/>\n</div>\n\n<div className=\"control\">\n<button className={`button is-success ${(isLoading || isSaving) && \"is-loading\"}`}\ndisabled={isLoading || isSaving}>Add</button>\n</div>\n</div>\n</form>\n\n<div className=\"container todo-list\">\n{todos.map((todo) => <Todo key={todo._id}\nid={todo._id}\ntodo={todo}\nonDelete={() => deleteTodo(todo._id)}\nonToggle={() => toggleTodo(todo._id)}/> )}\n<div className=\"white\">\nTotal: {total} , Complete: {complete} , Incomplete: {incomplete}\n</div>\n</div>\n</section>\n);\n}\n}\n\nconst mapStateToProps = (state) => {\nreturn {\ntodos: state.todos.items,\nisLoading: state.todos.loading,\nisSaving: state.todos.saving,\nerror: state.todos.error\n}\n}\n\nconst mapDispatchToProps = {\naddTodo,\ntoggleTodo,\ndeleteTodo,\nfetchTodos\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos)","import React, {Component} from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport Todos from './Todos';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Todos />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n    ADD_TODO,\n    ADD_TODO_SUCCESS,\n    TODOS_FAILURE,\n    TOGGLE_TODO,\n    DELETE_TODO,\n    LOADED_TODOS,\n    FETCH_TODOS\n    } from '../actions/todos'\n    \n    export const TODOS_DEFAULT_STATE = {\n    loading: false,\n    saving: false,\n    error: '',\n    items: []\n    }\n    \n    export default function todos (state = TODOS_DEFAULT_STATE, action) {\n    switch (action.type) {\n    case LOADED_TODOS:\n    return {...state, items: action.todos, loading: false}\n    \n    case FETCH_TODOS: {\n    return {...state, loading: true}\n    }\n    \n    case ADD_TODO:\n    return {...state, saving: true}\n    \n    case ADD_TODO_SUCCESS:\n    return {\n    ...state,\n    items: state.items.concat(action.todo),\n    saving: false\n    }\n    \n    case TODOS_FAILURE:\n    return {...state, loading: false, saving: false, error: action.error}\n    \n    case TOGGLE_TODO:\n    return {\n    ...state,\n    items: state.items.map((todo) =>\n    todo._id === action.id ? {...todo, done: !todo.done} : todo\n    )\n    }\n    \n    case DELETE_TODO:\n    return {\n    ...state,\n    items: state.items.reduce((items, todo) =>\n    todo._id !== action.id ? items.concat(todo) : items, []\n    )\n    }\n    \n    default:\n    return state\n    }\n    }","import { combineReducers } from 'redux'\n import todos, { TODOS_DEFAULT_STATE } from './todos'\n \n const todoApp = combineReducers({\n todos\n })\n \n export const DEFAULT_STATE = {\n todos: TODOS_DEFAULT_STATE\n }\n \n export default todoApp","import { call, put, takeLatest, takeEvery } from 'redux-saga/effects'\n import { ADD_TODO, DELETE_TODO, FETCH_TODOS, TOGGLE_TODO, loadedTodos, addTodoSuccess, todosFailure } from '../actions/todos'\n \n function* getAllTodos () {\n try {\n const res = yield call(fetch, 'v1/todos')\n const todos = yield res.json()\n yield put(loadedTodos(todos))\n } catch (e) {\n yield put(todosFailure(e.message))\n }\n }\n \n function* saveTodo (action) {\n try {\n const options = {\n method: 'POST',\n body: JSON.stringify(action.todo),\n headers: new Headers({\n 'Content-Type': 'application/json'\n })\n }\n \n const res = yield call(fetch, 'v1/todos', options)\n const todo = yield res.json()\n yield put(addTodoSuccess(todo))\n } catch (e) {\n yield put(todosFailure(e.message))\n }\n }\n \n function* deleteTodo (action) {\n try {\n yield call(fetch, `v1/todos/${action.id}`, { method: 'DELETE' })\n } catch (e) {\n yield put(todosFailure(e.message))\n }\n }\n \n function* updateTodo (action) {\n try {\n yield call(fetch, `v1/todos/${action.id}`, { method: 'POST' })\n } catch (e) {\n yield put(todosFailure(e.message))\n }\n }\n \n function* rootSaga() {\n yield takeLatest(FETCH_TODOS, getAllTodos)\n yield takeLatest(ADD_TODO, saveTodo)\n yield takeLatest(DELETE_TODO, deleteTodo)\n yield takeEvery(TOGGLE_TODO, updateTodo)\n }\n \n export default rootSaga","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer, { DEFAULT_STATE } from './reducers'\nimport rootSaga from './sagas'\n \nconst sagaMiddleware = createSagaMiddleware()\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n     rootReducer, \n     DEFAULT_STATE,\n     composeEnhancers(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(rootSaga)\n\nReactDOM.render((\n    <Provider store={store}>\n        <App />\n    </Provider>\n    ), document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}